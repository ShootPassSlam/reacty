{"map":"{\"version\":3,\"sources\":[\"/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/src/components/People/Person/Person.js\",\"/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/src/components/People/People.js\",\"/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/src/components/Topbar/Topbar.js\",\"/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/src/containers/App.js\",\"/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/src/serviceWorker.js\",\"/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/src/index.js\",\"/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-4-0!/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/node_modules/css-loader/index.js??ref--6-oneOf-4-1!/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/node_modules/postcss-loader/src/index.js??postcss!/Users/dominicscotto/Desktop/Portfolio/react_rest/homework-dominic-scotto/src/components/People/Person/Person.module.css\"],\"names\":[\"person\",\"props\",\"react_default\",\"a\",\"createElement\",\"reactstrap_es\",\"className\",\"styles\",\"Person\",\"xs\",\"sm\",\"Title\",\"id\",\"name\",\"number\",\"people\",\"state\",\"endpoint\",\"_this2\",\"this\",\"socket\",\"WebSocket\",\"onopen\",\"send\",\"onmessage\",\"e\",\"message\",\"JSON\",\"parse\",\"data\",\"console\",\"log\",\"Object\",\"toConsumableArray\",\"location\",\"array\",\"value\",\"length\",\"low\",\"high\",\"mid\",\"locationOf\",\"splice\",\"setState\",\"close\",\"nextProps\",\"nextState\",\"map\",\"key\",\"Component\",\"topbar\",\"buttonTitle\",\"buttonColor\",\"buttonState\",\"title\",\"color\",\"onClick\",\"clicked\",\"App\",\"showPeople\",\"webSocketStreamToggle\",\"doesShow\",\"_this\",\"People\",\"Topbar\",\"Boolean\",\"window\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_containers_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"change\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\nimport { Container, Row, Col } from 'reactstrap';\\n\\nimport styles from './Person.module.css';\\n\\nconst person = (props) => {\\n    \\n    return (\\n        <Container className={styles.Person}>\\n            <Row>\\n                <Col xs=\\\"6\\\" sm=\\\"4\\\">\\n                    <p className={styles.Title}>Id:</p>\\n                    <p>{props.id}</p>\\n                </Col>\\n                <Col xs=\\\"6\\\" sm=\\\"4\\\">\\n                    <p className={styles.Title}>Name:</p>\\n                    <p>{props.name}</p>\\n                </Col>\\n                <Col xs=\\\"6\\\" sm=\\\"4\\\">\\n                    <p className={styles.Title}>Number:</p>\\n                    <p>{props.number}</p>\\n                </Col>\\n            </Row>\\n        </Container>\\n    );\\n}\\n\\nexport default person;\",\"import React, { Component } from 'react';\\n\\nimport Person from './Person/Person';\\n\\nconst locationOf = (array, value) =>{\\n    if (array.length === 0){\\n        return 0;\\n    }\\n    let low = 0,\\n        high = array.length;\\n    while (low < high) {\\n        let mid = (low + high) >>> 1;\\n        if (array[mid][\\\"id\\\"] < value) low = mid + 1;\\n        else high = mid;\\n    }\\n    return low;\\n}\\n\\nclass people extends Component {\\n\\n    state = {\\n        people: [],\\n        endpoint: 'ws://localhost:7770'\\n    }\\n\\n    componentDidMount(){\\n        this.socket = new WebSocket(this.state.endpoint);\\n        this.socket.onopen = () => {\\n            this.socket.send('init');\\n        }\\n        this.socket.onmessage = e => {\\n            var message = null;\\n            try {\\n                message = JSON.parse(e.data);\\n            } catch(e) {\\n                console.log('malformed message');\\n            }\\n            if (message) {\\n                const people = [...this.state.people];\\n                const location = locationOf(people, message.id);\\n                if(!people[location] || people[location][\\\"id\\\"]!== message.id){\\n                    people.splice(location, 0, {id: message.id, name: message.name, number: message.value});\\n                }else if(people[location][\\\"id\\\"]=== message.id){\\n                    people.splice(location, 1, {id: message.id, name: message.name, number: message.value});\\n                }\\n                this.setState({people:people});\\n            }\\n        } \\n    }\\n\\n    componentWillUnmount(){\\n        this.socket.close();\\n    }\\n\\n    shouldComponentUpdate(nextProps, nextState){\\n        return nextState.people !== this.state.people;\\n    }\\n\\n    render(){\\n        console.log(\\\"In the render:\\\", this.state.people);\\n        return this.state.people.map( person => {\\n            return <Person\\n                key = {person.id} \\n                id = {person.id} \\n                name = {person.name} \\n                number = {person.number}/>\\n        })\\n    }\\n}\\n\\nexport default people;\",\"import React from 'react';\\nimport { Jumbotron, Button } from 'reactstrap';\\n\\nconst topbar = (props) => {\\n    let buttonTitle = \\\"Connect To Websocket\\\";\\n    let buttonColor = \\\"success\\\";\\n    if (props.buttonState === true){\\n        buttonTitle = \\\"Disconnect From Websocket\\\";\\n        buttonColor = \\\"warning\\\";\\n    }\\n\\n    return (\\n        <Jumbotron>\\n            <h1 className=\\\"display-3\\\">{props.title}</h1>\\n            <Button color= {buttonColor}\\n                onClick={props.clicked}>{buttonTitle}</Button>\\n        </Jumbotron>\\n    );\\n};\\n\\nexport default topbar;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport People from '../components/People/People';\\nimport Topbar from '../components/Topbar/Topbar';\\n\\nclass App extends Component {\\n    state = {\\n        showPeople: false,\\n    }\\n\\n    webSocketStreamToggle = () => {\\n        const doesShow = this.state.showPeople;\\n        this.setState({ showPeople: !doesShow});\\n    }\\n    \\n    shouldComponentUpdate(nextProps, nextState){\\n        return nextState.showPeople !== this.state.showPeople;\\n    }\\n\\n    render() {\\n        let people = null\\n        if (this.state.showPeople) {\\n            people = <People />\\n        }\\n\\n        return (\\n            <div className=\\\"App\\\">\\n                <Topbar\\n                    title = \\\"Dominic Scotto Homework\\\"\\n                    buttonState = {this.state.showPeople}\\n                    clicked = {this.webSocketStreamToggle} />\\n                {people}\\n            </div>\\n        );\\n    }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/App';\\nimport * as serviceWorker from './serviceWorker';\\nimport 'bootstrap/dist/css/bootstrap.css';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"Person\\\":\\\"Person_Person__1Q6ql\\\",\\\"change\\\":\\\"Person_change__1VWJG\\\",\\\"Title\\\":\\\"Person_Title__1YNQ8\\\"};\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{18:function(e,t,n){e.exports=n(32)},23:function(e,t,n){},25:function(e,t,n){},32:function(e,t,n){\"use strict\";n.r(t);var a=n(1),o=n.n(a),c=n(4),l=n.n(c),r=(n(23),n(6)),s=n(7),i=n(9),u=n(8),m=n(10),p=(n(25),n(17)),h=n(3),d=n(5),b=n.n(d),f=function(e){return o.a.createElement(h.c,{className:b.a.Person},o.a.createElement(h.e,null,o.a.createElement(h.b,{xs:\"6\",sm:\"4\"},o.a.createElement(\"p\",{className:b.a.Title},\"Id:\"),o.a.createElement(\"p\",null,e.id)),o.a.createElement(h.b,{xs:\"6\",sm:\"4\"},o.a.createElement(\"p\",{className:b.a.Title},\"Name:\"),o.a.createElement(\"p\",null,e.name)),o.a.createElement(h.b,{xs:\"6\",sm:\"4\"},o.a.createElement(\"p\",{className:b.a.Title},\"Number:\"),o.a.createElement(\"p\",null,e.number))))},w=function(e){function t(){var e,n;Object(r.a)(this,t);for(var a=arguments.length,o=new Array(a),c=0;c<a;c++)o[c]=arguments[c];return(n=Object(i.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(o)))).state={people:[],endpoint:\"ws://localhost:7770\"},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;this.socket=new WebSocket(this.state.endpoint),this.socket.onopen=function(){e.socket.send(\"init\")},this.socket.onmessage=function(t){var n=null;try{n=JSON.parse(t.data)}catch(t){console.log(\"malformed message\")}if(n){var a=Object(p.a)(e.state.people),o=function(e,t){if(0===e.length)return 0;for(var n=0,a=e.length;n<a;){var o=n+a>>>1;e[o].id<t?n=o+1:a=o}return n}(a,n.id);a[o]&&a[o].id===n.id?a[o].id===n.id&&a.splice(o,1,{id:n.id,name:n.name,number:n.value}):a.splice(o,0,{id:n.id,name:n.name,number:n.value}),e.setState({people:a})}}}},{key:\"componentWillUnmount\",value:function(){this.socket.close()}},{key:\"shouldComponentUpdate\",value:function(e,t){return t.people!==this.state.people}},{key:\"render\",value:function(){return console.log(\"In the render:\",this.state.people),this.state.people.map(function(e){return o.a.createElement(f,{key:e.id,id:e.id,name:e.name,number:e.number})})}}]),t}(a.Component),v=function(e){var t=\"Connect To Websocket\",n=\"success\";return!0===e.buttonState&&(t=\"Disconnect From Websocket\",n=\"warning\"),o.a.createElement(h.d,null,o.a.createElement(\"h1\",{className:\"display-3\"},e.title),o.a.createElement(h.a,{color:n,onClick:e.clicked},t))},k=function(e){function t(){var e,n;Object(r.a)(this,t);for(var a=arguments.length,o=new Array(a),c=0;c<a;c++)o[c]=arguments[c];return(n=Object(i.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(o)))).state={showPeople:!1},n.webSocketStreamToggle=function(){var e=n.state.showPeople;n.setState({showPeople:!e})},n}return Object(m.a)(t,e),Object(s.a)(t,[{key:\"shouldComponentUpdate\",value:function(e,t){return t.showPeople!==this.state.showPeople}},{key:\"render\",value:function(){var e=null;return this.state.showPeople&&(e=o.a.createElement(w,null)),o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(v,{title:\"Dominic Scotto Homework\",buttonState:this.state.showPeople,clicked:this.webSocketStreamToggle}),e)}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(30);l.a.render(o.a.createElement(k,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},5:function(e,t,n){e.exports={Person:\"Person_Person__1Q6ql\",change:\"Person_change__1VWJG\",Title:\"Person_Title__1YNQ8\"}}},[[18,2,1]]]);","extractedComments":[]}